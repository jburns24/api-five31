name: build and tag

on:
  pull_request:
    branches: [master]
    paths:
      - '**/Dockerfile'
      - '**/.dockerignore'
      - .github/**
      - '**.go'
      - '**.mod'
      - '**.sum'
      - config/**
      - '**/Makefile*'
      - '**/documentation.md'
      - .golangci.yaml
      - .goreleaser.yaml

  push:
    branches: [master]
  workflow_dispatch:

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: setup go
        uses: actions/setup-go-action@v5
        with:
          go-version: 1.23

      - name: lint
        run: |
          go install github.com/golangci/golangci-lint@latest
          golangci-lint run

      - name: check deps
        run: |
          go mod tidy -compat=1.22
          git diff -s --exit-code || (echo 'Generated code is out of date. Run make generate and commit the changes' && exit 1)
  build:
    name: build
    strategy:
      matrix:
        GOOS: [darwin, linux]
        GOARCH: [arm64, amd64]
        go: ['1.23']
        exclude:
          - GOOS: darwin
            GOARCH: arm
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          version: latest
          args: release --clean --snapshot --split
        env:
          GGOOS: ${{ matrix.GOOS }}
          GGOARCH: ${{ matrix.GOARCH }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    strategy:
      matrix:
        go: ['1.23']
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: false

      - name: Make test
        run: make test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4

  go-semantic-release:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [lint, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Run go-semantic-release
        uses: go-semantic-release/action@v1
        with:
          github-token: ${{ secrets.SEMANTIC_VERSION_PAT }}
          changelog-generator-opt: emojis=true
          allow-initial-development-versions: true


